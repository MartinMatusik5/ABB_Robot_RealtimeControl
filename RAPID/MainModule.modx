MODULE MainModule
    VAR egmident egmID1;
    VAR egmstate egmSt1;
    ! limits for cartesian convergence: +-1 mm
    CONST egm_minmax egm_minmax_lin1:=[-1,1];
    ! limits for orientation convergence: +-2 degrees
    CONST egm_minmax egm_minmax_rot1:=[-2,2];
    ! Start position
    CONST jointtarget jpos10:=[[0,0,0,0,30,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    ! Used tool
    TASK PERS tooldata tFroniusCMT:=[TRUE,[[12.3313,-0.108707,416.142],[0.903899,-0.00320735,0.427666,0.00765917]],[2.6,[-111.1,24.6,386.6],[1,0,0,0],0,0,0.072]];
    ! corr-frame: wobj, sens-frame: wobj
    ! Correction frame offset: none
    VAR pose corr_frame_offs:=[[0,0,0],[1,0,0,0]];
    TASK PERS tooldata toolEGM:=[TRUE,[[0,0,100],[0,0,1,0]],[1,[0,0,1],[1,0,0,0],0,0,0]];
    TASK PERS wobjdata wobjEGM:=[FALSE, TRUE, "",[[1000, 0, 500],[1, 0, 0, 0]],[[0,0,0],[1,0,0,0]]];

    CONST robtarget pStart:=[[1000,0,500],[1,0,0,0],[0,-1,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];

    PROC main()
        ! Move to start position. Fine point is demanded.
       MoveJ pStart,v1000,fine,toolEGM\WObj:=wobj0;
       run_egm;
    ENDPROC

    PROC run_egm()
        EGMReset egmID1;
        EGMGetId egmID1;
        egmSt1:=EGMGetState(egmID1);
        TPWrite "EGM state: "\Num:=egmSt1;
        IF egmSt1<=EGM_STATE_CONNECTED THEN
            ! Set up the EGM data source: UdpUc server using device "EGMsensor:" and configuration "default"
            EGMSetupUC ROB_1,egmID1,"default","EGMsensor:"\pose;
        ENDIF
        
        wobjEGM.uframe.trans:=pStart.trans;
        wobjEGM.uframe.rot:=pStart.rot;
        
        ! Correction frame is the World coordinate system and the sensor measurements are relative to the tool frame of the used tool (tool0)
        EGMActPose egmID1\Tool:=toolEGM,corr_frame_offs,EGM_FRAME_WOBJ,wobjEGM.uframe,EGM_FRAME_WOBJ\MaxSpeedDeviation:=100;
        ! Run: the convergence condition has to be fulfilled during 2 seconds before RAPID execution continues to the next instruction
        EGMRunPose egmID1,EGM_STOP_HOLD\x\y\z\rx\ry\rz\CondTime:=60\RampInTime:=0.05;
        egmSt1:=EGMGetState(egmID1);
        IF egmSt1=EGM_STATE_CONNECTED THEN
            TPWrite "Reset EGM instance egmID1";
            EGMReset egmID1;
        ENDIF
    ENDPROC
    PROC all_targets()
        MoveL pStart,v1000,z100,toolEGM\WObj:=wobj0;
    ENDPROC
ENDMODULE